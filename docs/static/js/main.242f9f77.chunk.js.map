{"version":3,"sources":["redux/FeeSlice.js","components/TotalFee.jsx","components/HeaderApp.jsx","components/common/ListItemLink.jsx","components/DataTable.jsx","redux/ConverterCryptocurrenciesSlice.js","features/exchange/HistoryView.jsx","features/exchange/OrderBook.jsx","features/exchange/OrderView.jsx","components/Menu.jsx","App.js","reportWebVitals.js","store.js","index.js"],"names":["FeeSlice","createSlice","name","initialState","feeAmount","reducers","setFee","state","action","payload","actions","useStyles","makeStyles","theme","typography","padding","spacing","TotalFee","styles","useState","anchorEl","setAnchorEl","useSelector","feeAmountKeys","setFeeAmountKeys","useEffect","Object","keys","open","Boolean","id","undefined","Button","aria-describedby","variant","color","onClick","event","currentTarget","endIcon","Popover","onClose","anchorOrigin","vertical","horizontal","transformOrigin","length","map","key","index","Typography","className","value","toolBar","display","justifyContent","appBar","zIndex","drawer","HeaderApp","AppBar","position","Toolbar","noWrap","ListItemLink","props","icon","text","to","renderLink","useMemo","forwardRef","itemProps","ref","ListItem","button","component","ListItemIcon","ListItemText","primary","columns","field","headerName","minWidth","DataTable","rows","style","height","width","pageSize","SLICE_NAME","converterCryptocurrenciesSlice","orderList","processOrderList","finishOrderList","order","pending","HistoryView","OrderBook","orderPending","filter","btnHeader","converCryptocurrencies","root","margin","cardHeader","textAlign","marginBottom","containerSpaceBewteen","containerSend","bullet","transform","title","fontSize","pos","alignSelf","marginLeft","textCenter","cardAction","customStyles","container","OrderView","currencies","label","price","initialOrder","send","currency","currencyPrice","operationType","orderType","recived","feeOrder","dispatch","useDispatch","isModeBuy","setIsModeBuy","orderInformation","setOrdenInformation","currencySelected","setCurrencySelected","typeMode","calculate","Number","handleChangeCurrency","Card","CardContent","CardHeader","subheader","TextField","onChange","target","options","menuPosition","defaultValue","InputProps","readOnly","CardActions","orderInfomation","fee","getState","converterCryptocurrencies","setTimeout","auxFeeValue","newFeeAmount","disabled","quantity","total","flexShrink","drawerPaper","drawerContainer","overflow","content","flexGrow","Menu","Drawer","classes","paper","List","nav","path","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","converCrytocurrenciesReducer","feeReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.242f9f77.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const SLICE_NAME = \"fee\";\r\nconst initialState = {\r\n  feeAmount: {}\r\n};\r\n\r\nexport const FeeSlice = createSlice({\r\n  name: SLICE_NAME,\r\n  initialState,\r\n  reducers: {\r\n    setFee: (state, action) => {\r\n      state.feeAmount = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { setFee } = FeeSlice.actions;\r\n\r\nexport const processFee = (fee) => (dispatch, getState) => {\r\n  const {\r\n    fee: { feeAmount },\r\n  } = getState();\r\n  const key = Object.keys(fee)[0];\r\n  const auxFeeValue = feeAmount[key]?.value || 0;\r\n  const newFeeAmount = {\r\n    ...feeAmount,\r\n    [key]: { value: fee[key] + auxFeeValue },\r\n  };\r\n  dispatch(setFee(newFeeAmount));\r\n};\r\nexport default FeeSlice.reducer;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Popover from \"@material-ui/core/Popover\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport { useSelector } from \"react-redux\";\r\nimport { SLICE_NAME } from \"../redux/FeeSlice\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  typography: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function TotalFee() {\r\n  const styles = useStyles();\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const { feeAmount } = useSelector((state) => state[SLICE_NAME]);\r\n  const [feeAmountKeys, setFeeAmountKeys] = useState([]) \r\n\r\n  useEffect(() => {\r\n    setFeeAmountKeys(Object.keys(feeAmount))\r\n  }, [feeAmount])\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? \"simple-popover\" : undefined;\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        aria-describedby={id}\r\n        variant=\"text\"\r\n        color=\"inherit\"\r\n        onClick={handleClick}\r\n        endIcon={<ArrowDropDownIcon/>}\r\n      >\r\n        Total Fee\r\n      </Button>\r\n      <Popover\r\n        id={id}\r\n        open={open}\r\n        anchorEl={anchorEl}\r\n        onClose={handleClose}\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"center\",\r\n        }}\r\n        transformOrigin={{\r\n          vertical: \"top\",\r\n          horizontal: \"center\",\r\n        }}\r\n      >\r\n          <div>\r\n              {\r\n                 feeAmountKeys.length > 0 ? feeAmountKeys.map((key, index) =>(\r\n                  <Typography key={index} className={styles.typography}>{`${key}: ${feeAmount[key].value}`} </Typography>\r\n                  )) \r\n                  :  <Typography className={styles.typography}> no order processed </Typography>\r\n              }\r\n          </div>\r\n      </Popover>\r\n    </div>\r\n  );\r\n}\r\n","import { AppBar, makeStyles, Toolbar, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport TotalFee from \"./TotalFee\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    toolBar: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\"\r\n   },\r\n   appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n  },\r\n  }));\r\n\r\nexport default function HeaderApp() {\r\n    const styles = useStyles();\r\n  return (\r\n    <AppBar position=\"fixed\"  className={styles.appBar} >\r\n      <Toolbar className={styles.toolBar}>\r\n        <Typography variant=\"h6\" noWrap>\r\n          BINANCE\r\n        </Typography>\r\n        <TotalFee />\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n","import { ListItem, ListItemIcon, ListItemText } from \"@material-ui/core\";\r\nimport React, { forwardRef, useMemo } from \"react\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\n\r\nexport default function ListItemLink(props) {\r\n  const { icon, text, to } = props;\r\n\r\n  const renderLink = useMemo(\r\n    () =>\r\n      forwardRef((itemProps, ref) => (\r\n        <RouterLink to={to} ref={ref} {...itemProps} />\r\n      )),\r\n    [to]\r\n  );\r\n\r\n  return (\r\n    <ListItem button component={renderLink}>\r\n      {icon ? <ListItemIcon>{icon}</ListItemIcon> : null}\r\n      <ListItemText primary={text} />\r\n    </ListItem>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\n\r\nconst columns = [\r\n  {\r\n    field: 'operationType',\r\n    headerName: 'Operation Type',\r\n    minWidth: 200,\r\n  },\r\n  {\r\n    field: 'orderType',\r\n    headerName: 'Order type',\r\n    minWidth: 200,\r\n  },\r\n  {\r\n    field: 'currency',\r\n    headerName: 'Cryptocurrency',\r\n    minWidth: 200,\r\n  },\r\n  {\r\n    field: 'currencyPrice',\r\n    headerName: 'Currency Price',\r\n     minWidth: 200,\r\n  },\r\n  {\r\n    field: 'send',\r\n    headerName: 'Currency amount',\r\n    minWidth: 300,\r\n  },\r\n  {\r\n    field: 'recived',\r\n    headerName: \"Recived\",\r\n    minWidth: 300,\r\n  }\r\n];\r\n\r\nexport default function DataTable( { rows }) {\r\n  return (\r\n    <div style={{ height: 400, width: '100%' }}>\r\n      <DataGrid\r\n        rows={rows}\r\n        columns={columns}\r\n        pageSize={5}\r\n      />\r\n    </div>\r\n  );\r\n}","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nexport const SLICE_NAME =\"converterCryptocurrencies\"\r\nconst initialState = {\r\n  orderList:[],\r\n}\r\n\r\nexport const converterCryptocurrenciesSlice = createSlice({\r\n  name: SLICE_NAME,\r\n  initialState,\r\n  reducers: {\r\n    processOrderList: (state, action ) => {\r\n      state.orderList = [...state.orderList, {...action.payload, id:state.orderList.length}]\r\n    },\r\n    finishOrderList: (state, action ) => {\r\n      state.orderList = state.orderList.map( order => order.id === action.payload ? {...order, pending: false } : order )\r\n    }\r\n  },\r\n})\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { processOrderList, finishOrderList } = converterCryptocurrenciesSlice.actions\r\n\r\nexport const processOrder = orderInfomation => (dispatch, getState) => {\r\n  const { converterCryptocurrencies: { orderList } } = getState();\r\n  dispatch(processOrderList({...orderInfomation, id: orderList.length, recived:`${orderInfomation.recived} ${orderInfomation.currency}`, send:`${orderInfomation.send} USD` }))\r\n  if(orderInfomation.pending){\r\n    setTimeout(() => {\r\n      dispatch(finishOrderList(orderList.length));\r\n    }, 60 * 1000 );\r\n  }\r\n};\r\n\r\nexport default converterCryptocurrenciesSlice.reducer","import React from \"react\";\r\nimport DataTable from \"../../components/DataTable\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { SLICE_NAME } from \"../../redux/ConverterCryptocurrenciesSlice\";\r\n\r\nexport default function HistoryView() {\r\n  const { orderList } = useSelector((state) => state[SLICE_NAME]);\r\n  return (\r\n    <div>\r\n      <DataTable rows={orderList} />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport DataTable from \"../../components/DataTable\";\r\nimport { SLICE_NAME } from \"../../redux/ConverterCryptocurrenciesSlice\";\r\n\r\nexport default function OrderBook() {\r\n  const { orderList } = useSelector((state) => state[SLICE_NAME]);\r\n  const orderPending = orderList.filter((order) => order.pending);\r\n  return <DataTable rows={orderPending} />;\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  CardContent,\r\n  TextField,\r\n  Typography,\r\n  Card,\r\n  CardActions,\r\n  CardHeader,\r\n} from \"@material-ui/core\";\r\nimport Select from \"react-select\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { processOrder } from \"../../redux/ConverterCryptocurrenciesSlice\";\r\nimport { processFee } from \"../../redux/FeeSlice\";\r\n\r\nconst useStyles = makeStyles({\r\n  btnHeader: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  converCryptocurrencies: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  root: {\r\n    minWidth: 275,\r\n    margin: 16,\r\n  },\r\n  cardHeader: {\r\n    textAlign: \"center\",\r\n    marginBottom: 24,\r\n  },\r\n  containerSpaceBewteen: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-around\",\r\n  },\r\n  containerSend: {\r\n    display: \"flex\",\r\n  },\r\n  bullet: {\r\n    display: \"inline-block\",\r\n    margin: \"0 2px\",\r\n    transform: \"scale(0.8)\",\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    alignSelf: \"flex-end\",\r\n    fontSize: 14,\r\n    marginLeft: 6,\r\n  },\r\n  textCenter:{\r\n    alignSelf: \"center\",\r\n    fontSize: 14,\r\n    marginLeft: 6,\r\n  },\r\n  to: {\r\n    display: \"flex\",\r\n  },\r\n  cardAction: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    marginBottom: 24,\r\n  },\r\n});\r\n\r\nconst customStyles = {\r\n  container: () => ({\r\n    width: \"7rem\",\r\n    margin: \"1rem\",\r\n  }),\r\n};\r\n\r\nexport default function OrderView() {\r\n  const styles = useStyles();\r\n  const currencies = [\r\n    {\r\n      value: 1,\r\n      label: \"BTC\",\r\n      price: 41592,\r\n    },\r\n    {\r\n      value: 2,\r\n      label: \"ETH\",\r\n      price: 3179,\r\n    },\r\n    {\r\n      value: 3,\r\n      label: \"USDC\",\r\n      price: 1,\r\n    },\r\n  ];\r\n  const initialOrder = {\r\n    send: \"\",\r\n    currency: currencies[0].label,\r\n    currencyPrice: currencies[0].price,\r\n    operationType: \"Buy\",\r\n    orderType: \"Limit\",\r\n    recived: \"\",\r\n    feeOrder: 0,\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n  const [isModeBuy, setIsModeBuy] = useState(true);\r\n  const [orderInformation, setOrdenInformation] = useState(initialOrder);\r\n  const [currencySelected, setCurrencySelected] = useState(currencies[0]);\r\n  const typeMode = `${isModeBuy ? \"Buy\" : \"Sell\"}`;\r\n\r\n  useEffect(() => {\r\n    setOrdenInformation({ ...initialOrder, operationType: typeMode });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [isModeBuy]);\r\n\r\n  useEffect(() => {\r\n    calculate(\r\n      Number(orderInformation.send),\r\n      orderInformation,\r\n      setOrdenInformation,\r\n      isModeBuy\r\n    );\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [orderInformation.currencyPrice]);\r\n\r\n  const handleChange = ({ target: { value } }) => {\r\n    calculate(Number(value), orderInformation, setOrdenInformation, isModeBuy);\r\n  };\r\n\r\n  const handleProcessOrder = () => {\r\n    const pending = orderInformation.orderType === \"Limit\";\r\n    const currency = isModeBuy ? \"USD\" : orderInformation.currency;\r\n    dispatch(processOrder({ ...orderInformation, pending }));\r\n    dispatch(processFee({ [currency]: orderInformation.feeOrder }));\r\n    setOrdenInformation(initialOrder);\r\n  };\r\n\r\n  const handleChangeCurrency = ({ label, price, value }) => {\r\n    setOrdenInformation({\r\n      ...orderInformation,\r\n      currency: label,\r\n      currencyPrice: price,\r\n    });\r\n    setCurrencySelected({ label, price, value });\r\n  };\r\n\r\n  const handleChangeOrderType = ({ label }) => {\r\n    setOrdenInformation({\r\n      ...orderInformation,\r\n      orderType: label,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.btnHeader}>\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          onClick={() => setIsModeBuy(!isModeBuy)}\r\n        >\r\n          {`${isModeBuy ? \"Sell\" : \"Buy\"}`}\r\n        </Button>\r\n      </div>\r\n      <Card className={styles.root}>\r\n        <CardContent>\r\n          <CardHeader\r\n            className={styles.cardHeader}\r\n            title={`${typeMode} Cryto`}\r\n            subheader={`1${currencySelected.label} ≈ USD$ ${currencySelected.price}`}\r\n          />\r\n          <div className={styles.containerSpaceBewteen}>\r\n            <div>\r\n              <div className={styles.containerSend}>\r\n                <TextField\r\n                  id=\"standard-basic\"\r\n                  label=\"you will pay\"\r\n                  value={orderInformation.send}\r\n                  onChange={handleChange}\r\n                />\r\n\r\n                {isModeBuy ? (\r\n                  <Typography className={styles.pos} color=\"textSecondary\">\r\n                    USD\r\n                  </Typography>\r\n                ) : (\r\n                  <Select\r\n                    styles={customStyles}\r\n                    value={currencySelected}\r\n                    options={currencies}\r\n                    onChange={handleChangeCurrency}\r\n                    menuPosition=\"fixed\"\r\n                  />\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className={styles.containerSend}>\r\n              <Select\r\n                defaultValue={{ value: \"limit\", label: \"Limit\" }}\r\n                styles={customStyles}\r\n                options={[\r\n                  { value: \"limit\", label: \"Limit\" },\r\n                  { value: \"market\", label: \"Market\" },\r\n                ]}\r\n                onChange={handleChangeOrderType}\r\n                menuPosition=\"fixed\"\r\n              />\r\n            </div>\r\n            <div className={styles.containerSend}>\r\n              <TextField\r\n                id=\"standard-basic\"\r\n                label=\"you will receive\"\r\n                value={orderInformation.recived}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                }}\r\n              />\r\n              {isModeBuy ? (\r\n                <Select\r\n                  styles={customStyles}\r\n                  value={currencySelected}\r\n                  options={currencies}\r\n                  onChange={handleChangeCurrency}\r\n                  menuPosition=\"fixed\"\r\n                />\r\n              ) : (\r\n                <Typography className={styles.textCenter} color=\"textSecondary\">\r\n                  USD\r\n                </Typography>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </CardContent>\r\n        <CardActions className={styles.cardAction}>\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            onClick={handleProcessOrder}\r\n            disabled={!orderInformation.send}\r\n          >\r\n            {`${typeMode} ${currencySelected.label}`}\r\n          </Button>\r\n        </CardActions>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction calculate(quantity, orderInformation, setOrdenInformation, isModeBuy) {\r\n  if (quantity) {\r\n    let fee;\r\n    let total;\r\n    if (isModeBuy) {\r\n      fee = quantity * 0.015;\r\n      total = (quantity - fee) / orderInformation.currencyPrice;\r\n    } else {\r\n      fee = quantity * 0.015;\r\n      total = (quantity - fee) * orderInformation.currencyPrice;\r\n    }\r\n    setOrdenInformation({\r\n      ...orderInformation,\r\n      recived: total,\r\n      feeOrder: fee,\r\n      send: quantity,\r\n    });\r\n  } else {\r\n    setOrdenInformation({\r\n      ...orderInformation,\r\n      feeOrder: 0,\r\n      send: \"\",\r\n      recived: \"\",\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Drawer, List, makeStyles, Toolbar } from \"@material-ui/core\";\r\nimport LibraryBooksIcon from '@material-ui/icons/LibraryBooks';\r\nimport PostAddIcon from '@material-ui/icons/PostAdd';\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport ListItemLink from \"./common/ListItemLink\";\r\nimport HistoryView from \"../features/exchange/HistoryView\";\r\nimport OrderBook from \"../features/exchange/OrderBook\";\r\nimport OrderView from \"../features/exchange/OrderView\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  drawer: {\r\n    width: 240,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: 240,\r\n  },\r\n  drawerContainer: {\r\n    overflow: \"auto\",\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport default function Menu() {\r\n  const styles = useStyles();\r\n  return (\r\n    <div className={styles.root}>\r\n      <Drawer\r\n        className={styles.drawer}\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: styles.drawerPaper,\r\n        }}\r\n      >\r\n        <Toolbar />\r\n        <div className={styles.drawerContainer}>\r\n          <List>\r\n            {[\r\n              { text: \"Buy/Sell\", to: \"/buy-sell\", icon:<PostAddIcon /> },\r\n              { text: \"Order Book\", to: \"/order-book\",icon:<LibraryBooksIcon /> },\r\n              { text: \"History\", to: \"/history\", icon:<LibraryBooksIcon /> },\r\n            ].map((nav) => (\r\n              <ListItemLink key={nav.text} to={nav.to} text={nav.text} icon={nav.icon} />\r\n            ))}\r\n          </List>\r\n        </div>\r\n      </Drawer>\r\n      <main className={styles.content}>\r\n        <Toolbar />\r\n        <div>\r\n          <Switch>\r\n            <Route path=\"/order-book\">\r\n              <OrderBook />\r\n            </Route>\r\n            <Route path=\"/history\">\r\n              <HistoryView/>\r\n            </Route>\r\n            <Route path=\"/\">\r\n              <OrderView/>\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport HeaderApp from \"./components/HeaderApp\";\nimport Menu from \"./components/Menu\";\n\nfunction App() {\n  return (\n      <Router>\n        <HeaderApp />\n        <Menu />\n      </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport converCrytocurrenciesReducer from './redux/ConverterCryptocurrenciesSlice';\r\nimport feeReducer from './redux/FeeSlice';\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    converterCryptocurrencies: converCrytocurrenciesReducer,\r\n    fee: feeReducer\r\n  },\r\n});\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { store } from './store';\nimport { Provider } from 'react-redux'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}